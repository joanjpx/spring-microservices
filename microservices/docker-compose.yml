version: '3'

services:
  ### Postgres database for Inventory
  db-inventory:
    container_name: db-inventory
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: service_inventory
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker  # Added profile here
    ports:
      - "5432:5432"     # Expose port to host
    expose:
      - "5432"          # Expose port to other services
    networks:
      - app-network

  ### MySQL database for Orders
  db-orders:
    container_name: db-orders
    image: mysql:8.0.33
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: service_order
      MYSQL_USER: spring
      MYSQL_PASSWORD: 12345678
      MYSQL_ROOT_PASSWORD: 12345678
      SPRING_PROFILES_ACTIVE: docker  # Added profile here
    ports:
      - "3306:3306"     # Expose port to host
    expose:
      - "3306"          # Expose port to other services
    networks:
      - app-network

  ### Postgres database for Products
  db-products:
    container_name: db-products
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: service_product
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker  # Added profile here
    ports:
      - "5431:5432"     # Expose port to host
    expose:
      - "5432"          # Expose port to other services
    networks:
      - app-network

  ### Spring Boot applications services

  discovery-service:
    image: openjdk:17-alpine
    container_name: discovery-service
    ports:
      - "8761:8761"     # Expose port to host
    expose:
      - "8761"          # Expose port to other services
    volumes:
      - ./discovery_server/target/discovery_server-0.0.1-SNAPSHOT.jar:/app/discovery_service.jar
    command: ["java", "-jar", "/app/discovery_service.jar"]
    environment:
      SPRING_PROFILES_ACTIVE: docker  # Added profile here
    networks:
      - app-network

  gateway-service:
    image: openjdk:17-alpine
    container_name: gateway-service
    ports:
      - "8080:8080"     # Expose port to host
    expose:
      - "8080"          # Expose port to other services
    volumes:
      - ./gateway/target/gateway-0.0.1-SNAPSHOT.jar:/app/gateway_service.jar
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
      - DISCOVERY_SERVER_URL=http://discovery-service:8761/eureka
      - SPRING_PROFILES_ACTIVE=docker  # Added profile here
    command: ["java", "-jar", "/app/gateway_service.jar"]
    networks:
      - app-network
    depends_on:
      - discovery-service
      - inventory-service
      - order-service
      - product-service

  product-service:
    image: openjdk:17-alpine
    deploy:
      replicas: 3
    volumes:
      - ./product_service/target/product_service-0.0.1-SNAPSHOT.jar:/app/product_service.jar
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
      - DISCOVERY_SERVER_URL=http://discovery-service:8761/eureka
      - SPRING_PROFILES_ACTIVE=docker  # Added profile here
    command: ["java", "-jar", "/app/product_service.jar"]
    networks:
      - app-network
    depends_on:
      - discovery-service

  order-service:
    image: openjdk:17-alpine
    container_name: order-service
    ports:
      - "8082:8082"     # Expose port to host
    expose:
      - "8082"          # Expose port to other services
    volumes:
      - ./order_service/target/order_service-0.0.1-SNAPSHOT.jar:/app/order_service.jar
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
      - DISCOVERY_SERVER_URL=http://discovery-service:8761/eureka
      - SPRING_PROFILES_ACTIVE=docker  # Added profile here
    command: ["java", "-jar", "/app/order_service.jar"]
    networks:
      - app-network
    depends_on:
      - discovery-service

  inventory-service:
    image: openjdk:17-alpine
    container_name: inventory-service
    ports:
      - "8081:8081"     # Expose port to host
    expose:
      - "8081"          # Expose port to other services
    volumes:
      - ./inventory_service/target/inventory_service-0.0.1-SNAPSHOT.jar:/app/inventory_service.jar
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
      - DISCOVERY_SERVER_URL=http://discovery-service:8761/eureka
      - SPRING_PROFILES_ACTIVE=docker  # Added profile here
    command: ["java", "-jar", "/app/inventory_service.jar"]
    networks:
      - app-network
    depends_on:
      - discovery-service

  ### Alpine Linux service for testing connectivity
  alpine-test-container:
    image: alpine:latest
    container_name: alpine-test-container
    command: sh -c "apk add --no-cache postgresql-client && sleep 3600"
    networks:
      - app-network
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
      - DISCOVERY_SERVER_URL=http://discovery-service:8761/eureka
      - SPRING_PROFILES_ACTIVE=docker  # Added profile here


networks:
  app-network:
    driver: bridge
